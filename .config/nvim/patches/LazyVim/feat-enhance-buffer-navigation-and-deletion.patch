From 707b6a259280cd463ea94c2180120fc01762156c Mon Sep 17 00:00:00 2001
From: majinjie <2734883936@qq.com>
Date: Fri, 14 Feb 2025 20:08:13 +0800
Subject: [PATCH] feat(keymaps): enhance buffer navigation and deletion
 commands

- Updated `<S-h>`, `<S-l>`, `[b`, and `]b` mappings to support `v:count1` for
  navigating buffers with a count, improving flexibility.
- Modified `<leader>bo` to delete buffers not in the current tab layout,
  providing better control over buffer cleanup.
- Added `<leader>bO` as a new mapping to delete other buffers, complementing
  the existing buffer deletion commands.
- Improved descriptions for clarity and consistency across all buffer-related
  mappings.
---
 lua/lazyvim/config/keymaps.lua | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/lua/lazyvim/config/keymaps.lua b/lua/lazyvim/config/keymaps.lua
index 3e3829d145..d7b02c9a55 100644
--- a/lua/lazyvim/config/keymaps.lua
+++ b/lua/lazyvim/config/keymaps.lua
@@ -31,16 +31,22 @@ map("v", "<A-j>", ":<C-u>execute \"'<,'>move '>+\" . v:count1<cr>gv=gv", { desc
 map("v", "<A-k>", ":<C-u>execute \"'<,'>move '<-\" . (v:count1 + 1)<cr>gv=gv", { desc = "Move Up" })
 
 -- buffers
-map("n", "<S-h>", "<cmd>bprevious<cr>", { desc = "Prev Buffer" })
-map("n", "<S-l>", "<cmd>bnext<cr>", { desc = "Next Buffer" })
-map("n", "[b", "<cmd>bprevious<cr>", { desc = "Prev Buffer" })
-map("n", "]b", "<cmd>bnext<cr>", { desc = "Next Buffer" })
+map("n", "<S-h>", "<cmd>execute 'bprevious' . v:count1<cr>", { desc = "Prev Buffer" })
+map("n", "<S-l>", "<cmd>execute 'bnext' . v:count1<cr>", { desc = "Next Buffer" })
+map("n", "[b", "<cmd>execute 'bprevious' . v:count1<cr>", { desc = "Prev Buffer" })
+map("n", "]b", "<cmd>execute 'bnext' . v:count1<cr>", { desc = "Next Buffer" })
 map("n", "<leader>bb", "<cmd>e #<cr>", { desc = "Switch to Other Buffer" })
 map("n", "<leader>`", "<cmd>e #<cr>", { desc = "Switch to Other Buffer" })
 map("n", "<leader>bd", function()
   Snacks.bufdelete()
 end, { desc = "Delete Buffer" })
 map("n", "<leader>bo", function()
+  local tab_buflist = vim.fn.tabpagebuflist()
+  Snacks.bufdelete(function(buf)
+    return not vim.list_contains(tab_buflist, buf)
+  end)
+end, { desc = "Delete Buffers other than the current layout" })
+map("n", "<leader>bO", function()
   Snacks.bufdelete.other()
 end, { desc = "Delete Other Buffers" })
 map("n", "<leader>bD", "<cmd>:bd<cr>", { desc = "Delete Buffer and Window" })
