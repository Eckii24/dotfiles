From ac3fc01d6c1299a81f7d542d6e317c9567ef4733 Mon Sep 17 00:00:00 2001
From: starbased-co <s@starbased.net>
Date: Sun, 31 Aug 2025 15:07:19 -0700
Subject: [PATCH] fix(terminal): set buffer when opening terminal with
 position='current'

When opening a terminal with position='current', the terminal buffer wasn't
being set in the current window, causing the original buffer content to remain
visible with terminal styling applied.

This fix adds a call to vim.api.nvim_win_set_buf() to properly set the
terminal buffer when using position='current'. Also updates type annotations
to include the 'current' position option and adds tests to prevent regression.

Solution suggested by Baricus in issue #2148.

Fixes #2148

Co-authored-by: Baricus <31926270+Baricus@users.noreply.github.com>
---
 docs/win.md             |  2 +-
 lua/snacks/win.lua      |  3 ++-
 tests/terminal_spec.lua | 22 ++++++++++++++++++++++
 3 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/docs/win.md b/docs/win.md
index 3dab7803a..da9c86314 100644
--- a/docs/win.md
+++ b/docs/win.md
@@ -54,7 +54,7 @@ Snacks.win({
 ---@field col? number|fun(self:snacks.win):number Column of the window. Use <1 for relative column. (default: center)
 ---@field row? number|fun(self:snacks.win):number Row of the window. Use <1 for relative row. (default: center)
 ---@field minimal? boolean Disable a bunch of options to make the window minimal (default: true)
----@field position? "float"|"bottom"|"top"|"left"|"right"
+---@field position? "float"|"bottom"|"top"|"left"|"right"|"current"
 ---@field border? "none"|"top"|"right"|"bottom"|"left"|"hpad"|"vpad"|"rounded"|"single"|"double"|"solid"|"shadow"|string[]|false
 ---@field buf? number If set, use this buffer instead of creating a new one
 ---@field file? string If set, use this file instead of creating a new buffer
diff --git a/lua/snacks/win.lua b/lua/snacks/win.lua
index 3d2a4dbb0..5b6fa29ca 100644
--- a/lua/snacks/win.lua
+++ b/lua/snacks/win.lua
@@ -63,7 +63,7 @@ M.meta = {
 ---@field col? number|fun(self:snacks.win):number Column of the window. Use <1 for relative column. (default: center)
 ---@field row? number|fun(self:snacks.win):number Row of the window. Use <1 for relative row. (default: center)
 ---@field minimal? boolean Disable a bunch of options to make the window minimal (default: true)
----@field position? "float"|"bottom"|"top"|"left"|"right"
+---@field position? "float"|"bottom"|"top"|"left"|"right"|"current"
 ---@field border? "none"|"top"|"right"|"bottom"|"left"|"hpad"|"vpad"|"rounded"|"single"|"double"|"solid"|"shadow"|string[]|false
 ---@field buf? number If set, use this buffer instead of creating a new one
 ---@field file? string If set, use this file instead of creating a new buffer
@@ -700,6 +700,7 @@ function M:open_win()
     self.win = vim.api.nvim_open_win(self.buf, enter, opts)
   elseif position == "current" then
     self.win = vim.api.nvim_get_current_win()
+    vim.api.nvim_win_set_buf(self.win, self.buf)
   else
     local parent = self.opts.win or 0
     local vertical = position == "left" or position == "right"
diff --git a/tests/terminal_spec.lua b/tests/terminal_spec.lua
index 01ecf1c3b..26b115450 100644
--- a/tests/terminal_spec.lua
+++ b/tests/terminal_spec.lua
@@ -23,3 +23,25 @@ describe("terminal.parse", function()
     end)
   end
 end)
+
+describe("terminal.open", function()
+  it("should set buffer when position is 'current'", function()
+    -- Create a test buffer with content
+    vim.cmd("enew")
+    local test_buf = vim.api.nvim_get_current_buf()
+    vim.api.nvim_buf_set_lines(test_buf, 0, -1, false, {"test content"})
+    
+    -- Open terminal with position='current'
+    local term = terminal.open(nil, { win = { position = "current" } })
+    
+    -- Check that the current window now has the terminal buffer
+    local current_win = vim.api.nvim_get_current_win()
+    local current_buf = vim.api.nvim_win_get_buf(current_win)
+    
+    assert.are.equal(term.buf, current_buf, "Terminal buffer should be set in current window")
+    assert.are.equal("terminal", vim.bo[current_buf].buftype, "Buffer should be a terminal")
+    
+    -- Clean up
+    term:close()
+  end)
+end)
